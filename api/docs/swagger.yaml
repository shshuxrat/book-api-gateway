definitions:
  models.Book:
    properties:
      category_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.BookCategory:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.CreateBook:
    properties:
      category_id:
        type: string
      name:
        type: string
    type: object
  models.CreateBookCategory:
    properties:
      name:
        type: string
    type: object
  models.GetAllBookCategoryResponse:
    properties:
      book_category_list:
        items:
          $ref: '#/definitions/models.BookCategory'
        type: array
      count:
        type: integer
    type: object
  models.GetAllBookResponse:
    properties:
      book_list:
        items:
          $ref: '#/definitions/models.Book'
        type: array
      count:
        type: integer
    type: object
  models.GetBookResponse:
    properties:
      category:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  models.MsgModel:
    properties:
      msg:
        type: string
    type: object
  models.ResponseModel:
    properties:
      code:
        type: integer
      data: {}
      error: {}
      message:
        type: string
    type: object
  models.UpdateBook:
    properties:
      category_id:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  models.UpdateBookCategory:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/book:
    get:
      consumes:
      - application/json
      description: Get All Book
      operationId: get-all-book
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: offset
        in: query
        name: offset
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.GetAllBookResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: get all book
      tags:
      - book
    post:
      consumes:
      - application/json
      description: Create Book
      operationId: create-book
      parameters:
      - description: book
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.CreateBook'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: create book
      tags:
      - book
    put:
      consumes:
      - application/json
      description: Update Book
      operationId: update-book
      parameters:
      - description: book
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBook'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.MsgModel'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: update book
      tags:
      - book
  /v1/book/{book_id}:
    delete:
      consumes:
      - application/json
      description: Delete Book By Id
      operationId: delete-book
      parameters:
      - description: book_id
        in: path
        name: book_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.MsgModel'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: delete book by id
      tags:
      - book
    get:
      consumes:
      - application/json
      description: Get Book By Id
      operationId: get-book
      parameters:
      - description: book_id
        in: path
        name: book_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.GetBookResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: get book by id
      tags:
      - book
  /v1/book_category:
    get:
      consumes:
      - application/json
      description: Get All Book Category
      operationId: get-all-book-category
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: offset
        in: query
        name: offset
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.GetAllBookCategoryResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: get all book category
      tags:
      - book_category
    post:
      consumes:
      - application/json
      description: Create Book Category
      operationId: create-book-category
      parameters:
      - description: book_category
        in: body
        name: book_category
        required: true
        schema:
          $ref: '#/definitions/models.CreateBookCategory'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: create book category
      tags:
      - book_category
    put:
      consumes:
      - application/json
      description: Update Book Category
      operationId: update-book-category
      parameters:
      - description: book_category
        in: body
        name: book_category
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBookCategory'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.MsgModel'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: update book category
      tags:
      - book_category
  /v1/book_category/{book_category_id}:
    delete:
      consumes:
      - application/json
      description: Delete Book Category By Id
      operationId: delete-book-category
      parameters:
      - description: book_category_id
        in: path
        name: book_category_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.MsgModel'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: delete book category by id
      tags:
      - book_category
    get:
      consumes:
      - application/json
      description: Get Book Category By Id
      operationId: get-book-category
      parameters:
      - description: book_category_id
        in: path
        name: book_category_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.BookCategory'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: get book category by id
      tags:
      - book_category
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
